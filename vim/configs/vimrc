source ~/.vim/settings/vim-plug.vim
source ~/.vim/settings/basic.vim
source ~/.vim/settings/common.vim
source ~/.vim/settings/go.vim
source ~/.vim/settings/python-mode.vim

" Use deoplete.
let g:deoplete#enable_at_startup = 1
let g:deoplete#enable_yarp = 1
let g:deoplete#enable_camel_case = 1
let g:deoplete#enable_refresh_always = 1
inoremap <silent><expr><TAB> pumvisible() ? "\<C-n>" : "\<TAB>"

" Trigger configuration. Do not use <tab> if you use https://github.com/Valloric/YouCompleteMe.
let g:UltiSnipsExpandTrigger="<tab>"
let g:UltiSnipsJumpForwardTrigger="<tab>"
let g:UltiSnipsJumpBackwardTrigger="<s-tab>"


let g:gitgutter_sign_added = 'A'
let g:gitgutter_sign_modified = 'M'
let g:gitgutter_sign_removed = 'D'
let g:gitgutter_sign_removed_first_line = 'DF'
let g:gitgutter_sign_modified_removed = 'MD'

" close vim if the only window left open is a NERDTree
autocmd bufenter * if (winnr("$") == 1 && exists("b:NERDTree") && b:NERDTree.isTabTree()) | q | endif

nmap <F2> :NERDTreeToggle<CR>
nmap <F8> :TagbarToggle<CR>

nnoremap <silent> <C-w>w :ZoomWin<CR>

" set python3 first
if v:version > 800
    set pyxversion=0
endif

" set tags search from current directory to root
set tags=tags;


" gitgutter keymap
nmap <leader>+ <Plug>GitGutterNextHunk
nmap <leader>= <Plug>GitGutterNextHunk
nmap <leader>- <Plug>GitGutterPrevHunk

" <F5> 编译和运行C
au filetype cpp nmap <leader>r :call CompileRunGpp()<CR>
au filetype c nmap <leader>r :call CompileRunGcc()<CR>
func! CompileRunGcc()
    exec "w"
    exec "!gcc % -o %< && ./%<"
endfunc
func! CompileRunGpp()
    exec "w"
    exec "!g++ % -o %< && ./%<"
endfunc
